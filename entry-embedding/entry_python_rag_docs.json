[
  {
    "id": "category_boolean_input",
    "title": "엔트리 파이썬 - boolean_input 카테고리",
    "content": "# boolean_input 카테고리 블록들\n\n## is_clicked\n**Python 문법:** `Entry.is_mouse_clicked()`\n\n**사용 예시:**\n```python\nEntry.is_mouse_clicked()\n```\n\n## is_press_some_key\n**Python 문법:** `Entry.is_key_pressed(%1)`\n\n**매개변수:**\n- VALUE: 위치 0\n\n**사용 예시:**\n```python\nEntry.is_key_pressed(%1)\n```\n\n",
    "type": "category_guide",
    "category": "boolean_input",
    "blocks": [
      {
        "block_id": "is_clicked",
        "category": "boolean_input",
        "python_syntax": [
          "Entry.is_mouse_clicked()"
        ],
        "parameters": [],
        "file": "block_judgement.js"
      },
      {
        "block_id": "is_press_some_key",
        "category": "boolean_input",
        "python_syntax": [
          "Entry.is_key_pressed(%1)"
        ],
        "parameters": [
          {
            "name": "VALUE",
            "index": 0
          }
        ],
        "file": "block_judgement.js"
      }
    ]
  },
  {
    "id": "category_visibility",
    "title": "엔트리 파이썬 - visibility 카테고리",
    "content": "# visibility 카테고리 블록들\n\n## show\n**Python 문법:** `Entry.show()`\n\n**사용 예시:**\n```python\nEntry.show()\n```\n\n## hide\n**Python 문법:** `Entry.hide()`\n\n**사용 예시:**\n```python\nEntry.hide()\n```\n\n",
    "type": "category_guide",
    "category": "visibility",
    "blocks": [
      {
        "block_id": "show",
        "category": "visibility",
        "python_syntax": [
          "Entry.show()"
        ],
        "parameters": [],
        "file": "block_looks.js"
      },
      {
        "block_id": "hide",
        "category": "visibility",
        "python_syntax": [
          "Entry.hide()"
        ],
        "parameters": [],
        "file": "block_looks.js"
      }
    ]
  },
  {
    "id": "category_weather_legacy",
    "title": "엔트리 파이썬 - weather_legacy 카테고리",
    "content": "# weather_legacy 카테고리 블록들\n\n## check_weather\n**Python 문법:** `Legacy.Weather.is_condition_sunny(%1, %2)`\n\n**매개변수:**\n- DATE: 위치 0\n- LOCATION: 위치 1\n\n**사용 예시:**\n```python\nLegacy.Weather.is_condition_sunny(%1, %2)\n```\n\n",
    "type": "category_guide",
    "category": "weather_legacy",
    "blocks": [
      {
        "block_id": "check_weather",
        "category": "weather_legacy",
        "python_syntax": [
          "Legacy.Weather.is_condition_sunny(%1, %2)"
        ],
        "parameters": [
          {
            "name": "DATE",
            "index": 0
          },
          {
            "name": "LOCATION",
            "index": 1
          }
        ],
        "file": "block_expansion_weather.js"
      }
    ]
  },
  {
    "id": "block_is_clicked",
    "title": "엔트리 파이썬 블록: is_clicked",
    "content": "# is_clicked 블록\n\n**카테고리:** boolean_input\n\n**Python 문법:**\n```python\nEntry.is_mouse_clicked()\n```\n\n## 사용 예시\n\n```python\nif Entry.is_mouse_clicked():\n    Entry.print('조건이 참입니다')\n```\n\n## 관련 정보\n\n- 이 블록은 boolean_input 카테고리에 속합니다\n- 원본 파일: block_judgement.js\n",
    "type": "block_reference",
    "block_id": "is_clicked",
    "category": "boolean_input",
    "python_syntax": [
      "Entry.is_mouse_clicked()"
    ],
    "parameters": []
  },
  {
    "id": "block_is_press_some_key",
    "title": "엔트리 파이썬 블록: is_press_some_key",
    "content": "# is_press_some_key 블록\n\n**카테고리:** boolean_input\n\n**Python 문법:**\n```python\nEntry.is_key_pressed(%1)\n```\n\n## 매개변수\n\n- **VALUE** (위치 0): 블록의 1번째 입력값\n\n## 사용 예시\n\n```python\nif Entry.is_key_pressed(%1):\n    Entry.print('조건이 참입니다')\n```\n\n## 관련 정보\n\n- 이 블록은 boolean_input 카테고리에 속합니다\n- 원본 파일: block_judgement.js\n",
    "type": "block_reference",
    "block_id": "is_press_some_key",
    "category": "boolean_input",
    "python_syntax": [
      "Entry.is_key_pressed(%1)"
    ],
    "parameters": [
      {
        "name": "VALUE",
        "index": 0
      }
    ]
  },
  {
    "id": "block_show",
    "title": "엔트리 파이썬 블록: show",
    "content": "# show 블록\n\n**카테고리:** visibility\n\n**Python 문법:**\n```python\nEntry.show()\n```\n\n## 사용 예시\n\n```python\nEntry.show()\n```\n\n## 관련 정보\n\n- 이 블록은 visibility 카테고리에 속합니다\n- 원본 파일: block_looks.js\n",
    "type": "block_reference",
    "block_id": "show",
    "category": "visibility",
    "python_syntax": [
      "Entry.show()"
    ],
    "parameters": []
  },
  {
    "id": "block_hide",
    "title": "엔트리 파이썬 블록: hide",
    "content": "# hide 블록\n\n**카테고리:** visibility\n\n**Python 문법:**\n```python\nEntry.hide()\n```\n\n## 사용 예시\n\n```python\nEntry.hide()\n```\n\n## 관련 정보\n\n- 이 블록은 visibility 카테고리에 속합니다\n- 원본 파일: block_looks.js\n",
    "type": "block_reference",
    "block_id": "hide",
    "category": "visibility",
    "python_syntax": [
      "Entry.hide()"
    ],
    "parameters": []
  },
  {
    "id": "block_check_weather",
    "title": "엔트리 파이썬 블록: check_weather",
    "content": "# check_weather 블록\n\n**카테고리:** weather_legacy\n\n**Python 문법:**\n```python\nLegacy.Weather.is_condition_sunny(%1, %2)\n```\n\n## 매개변수\n\n- **DATE** (위치 0): 블록의 1번째 입력값\n- **LOCATION** (위치 1): 블록의 2번째 입력값\n\n## 사용 예시\n\n```python\nresult = Legacy.Weather.is_condition_sunny(%1, %2)\nEntry.print(result)\n```\n\n## 관련 정보\n\n- 이 블록은 weather_legacy 카테고리에 속합니다\n- 원본 파일: block_expansion_weather.js\n",
    "type": "block_reference",
    "block_id": "check_weather",
    "category": "weather_legacy",
    "python_syntax": [
      "Legacy.Weather.is_condition_sunny(%1, %2)"
    ],
    "parameters": [
      {
        "name": "DATE",
        "index": 0
      },
      {
        "name": "LOCATION",
        "index": 1
      }
    ]
  },
  {
    "id": "entry_python_guide",
    "title": "엔트리 파이썬 기본 가이드",
    "content": "# 엔트리 파이썬 기본 가이드\n\n## 개요\n엔트리 파이썬은 블록 코딩을 Python 텍스트 코딩으로 변환하여 사용할 수 있는 기능입니다.\n\n## 기본 구조\n\n### 이벤트 함수\n```python\ndef when_start():\n    # 시작하기 블록의 Python 코드\n    pass\n\ndef when_press_key(key):\n    # 키를 눌렀을 때 블록의 Python 코드\n    pass\n\ndef when_click_mouse_on():\n    # 마우스를 클릭했을 때 블록의 Python 코드\n    pass\n```\n\n### 기본 명령어\n- `Entry.move_to_direction(distance)`: 방향으로 이동\n- `Entry.set_x(x)`: X 좌표 설정\n- `Entry.set_y(y)`: Y 좌표 설정\n- `Entry.show()`: 보이기\n- `Entry.hide()`: 숨기기\n- `Entry.print(text)`: 텍스트 출력\n\n### 조건문과 반복문\n```python\n# 조건문\nif Entry.is_mouse_clicked():\n    Entry.show()\n\n# 반복문\nfor i in range(10):\n    Entry.move_to_direction(10)\n```\n\n## 매개변수 규칙\n- `%1`, `%2`, `%3` 등은 블록의 입력값을 나타냅니다\n- 블록에서 Python으로 변환할 때 실제 값으로 치환됩니다\n\n## 주의사항\n- 모든 Entry 함수는 `Entry.` 접두사를 사용합니다\n- 이벤트 함수는 `def`로 시작하며 특정 이름 규칙을 따릅니다\n- 들여쓰기는 Python 문법을 따라 4칸 공백을 사용합니다\n",
    "type": "general_guide"
  },
  {
    "id": "entry_python_faq",
    "title": "엔트리 파이썬 자주 묻는 질문",
    "content": "# 엔트리 파이썬 FAQ\n\n## Q: 블록 코딩과 Python 코딩의 차이점은 무엇인가요?\nA: 블록 코딩은 시각적인 블록을 조합하여 프로그래밍하는 방식이고, Python 코딩은 텍스트로 직접 코드를 작성하는 방식입니다. 엔트리에서는 블록을 Python 코드로 자동 변환할 수 있습니다.\n\n## Q: Entry.move_to_direction()과 같은 함수는 어디서 확인할 수 있나요?\nA: 엔트리 워크스페이스에서 블록을 Python 모드로 전환하면 해당하는 Python 함수를 확인할 수 있습니다.\n\n## Q: 매개변수 %1, %2는 무엇을 의미하나요?\nA: 블록의 입력 필드 순서를 나타냅니다. %1은 첫 번째 입력값, %2는 두 번째 입력값을 의미합니다.\n\n## Q: Python 코드에서 오류가 발생했을 때 어떻게 해결하나요?\nA: \n1. 문법 오류: 들여쓰기, 괄호, 따옴표 등을 확인하세요\n2. 함수 오류: Entry. 접두사가 올바른지 확인하세요\n3. 매개변수 오류: 함수에 필요한 매개변수가 모두 제공되었는지 확인하세요\n\n## Q: 어떤 블록들이 Python으로 변환 가능한가요?\nA: 대부분의 엔트리 블록이 Python으로 변환 가능합니다. 움직임, 생김새, 소리, 판단, 반복, 변수 등 모든 카테고리의 블록을 지원합니다.\n\n## Q: Python 코드를 직접 작성할 때 주의할 점은?\nA: \n- Entry 함수는 반드시 `Entry.` 접두사를 사용하세요\n- 이벤트 함수는 정확한 이름을 사용하세요 (예: `def when_start():`)\n- Python 문법 규칙을 준수하세요 (들여쓰기, 콜론 등)\n",
    "type": "faq"
  }
]